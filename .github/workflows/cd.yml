name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed
    branches: [main]  # Only run on main branch completion

jobs:
  deploy:
    # Only run if the CI pipeline succeeded
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Fix Docker permissions and clean up
        run: |
          # Fix docker socket permissions
          sudo chmod 666 /var/run/docker.sock

          # Check current docker status
          sudo systemctl status docker || true

          # Restart docker service if needed
          sudo systemctl restart docker

          # Wait for docker to be ready
          sleep 5

          # Test docker access
          docker version || sudo docker version

      - name: Clean up disk space and containers
        run: |
          # Clean up disk space
          df -h
          sudo docker system prune -a -f || true
          sudo docker volume prune -f || true

          # Stop and remove containers by name
          sudo docker stop nginx_prod mysql_prod php_prod 2>/dev/null || true
          sudo docker rm nginx_prod mysql_prod php_prod 2>/dev/null || true

          # Stop containers using port 80
          for container in $(sudo docker ps --filter "publish=80" --format "{{.Names}}" 2>/dev/null || true); do
            echo "Stopping container using port 80: $container"
            sudo docker stop "$container" || true
          done

          # Clean up with docker-compose
          sudo docker-compose -f docker-compose.yml -f docker-compose.prod.yml down --remove-orphans 2>/dev/null || true

          df -h

      - name: Login and pull Docker image
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | sudo docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          sudo docker pull htmljeday/skillup-laravel-forum:latest
      - name: Start containers in production mode
        run: |
          sudo docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d --force-recreate --remove-orphans

          # Wait for services to be ready
          echo "Waiting for services to start..."
          sleep 10

          # Check if containers are running
          sudo docker-compose -f docker-compose.yml -f docker-compose.prod.yml ps

      - name: Clean up unused images
        run: sudo docker image prune -f
