name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed
    branches: [main]  # Only run on main branch completion

jobs:
  deploy:
    # Only run if the CI pipeline succeeded
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Clean up disk space
        run: |
          df -h
          sudo docker system prune -a -f
          sudo docker volume prune -f
          df -h

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Pull latest Docker image
        run: sudo docker pull htmljeday/skillup-laravel-forum:latest

      - name: Stop and remove old containers
        run: |
          # Stop and remove containers by name (more reliable)
          sudo docker stop nginx_prod mysql_prod php_prod 2>/dev/null || true
          sudo docker rm nginx_prod mysql_prod php_prod 2>/dev/null || true

          # Also stop any containers using port 80
          sudo docker ps --filter "publish=80" --format "table {{.Names}}" | tail -n +2 | xargs -r docker stop

          # Clean up any remaining containers from previous runs
          sudo docker-compose -f docker-compose.yml -f docker-compose.prod.yml down --remove-orphans 2>/dev/null || true

      - name: Start containers in production mode
        run: |
          sudo docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d --force-recreate --remove-orphans

          # Wait for services to be ready
          echo "Waiting for services to start..."
          sleep 10

          # Check if containers are running
          sudo docker-compose -f docker-compose.yml -f docker-compose.prod.yml ps

      - name: Clean up unused images
        run: sudo docker image prune -f
